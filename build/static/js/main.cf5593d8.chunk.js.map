{"version":3,"sources":["reducers/AuthReducer.js","reducers/VideoReducer.js","reducers/SearchReducer.js","reducers/index.js","actions/types.js","actions/FirebaseActions.js","components/Login.js","actions/AuthActions.js","actions/VideoActions.js","components/SearchBar.js","actions/SearchActions.js","components/VideoDetail.js","components/VideoListItem.js","components/VideoList.js","components/Home.js","components/LoginForm.js","App.js","serviceWorker.js","index.js"],"names":["INITIAL_STATE","isSignedIn","displayName","email","phoneNumber","photoURL","uid","videos","videosForLater","selectedVideo","term","combineReducers","authUser","state","arguments","length","undefined","action","type","Object","objectSpread","payload","videoUser","concat","toConsumableArray","filter","v","id","videoId","video","searchBar","setSavedVideosDb","auth","firebase","database","ref","currentUser","set","Login","this","props","userOnAuthStateChange","react_default","a","createElement","Redirect","to","renderLoginForm","Component","connect","dispatch","onAuthStateChanged","user","_user$providerData$","providerData","userLoginSuccess","createUserDb","on","snapshot","val","getSavedVideosFromDb","SearchBar","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onInputChange","bind","assertThisInitialized","event","setTerm","refs","pathInput","value","onSearchTermChange","className","onChange","React","VideoDetail","url","title","src","snippet","description","meProps","setVideoSelected","setVideoForLater","getState","unsaveVideoForLater","imageUrl","thumbnails","default","mdbreact","md","onClick","alt","map","indexOf","checkIfVideoIsSaved","renderButton","VideoList","videoItems","components_VideoListItem","key","etag","_state$videoUser","videoSearch","searchTerm","API_KEY","config","googleApiConfig","apiKey","YTSearch","setVideoSearched","userLogOut","signOut","then","components_SearchBar","components_VideoDetail","style","alignItems","components_VideoList","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccess","LoginForm","react","StyledFirebaseAuth_default","firebaseAuth","App","initializeApp","firebaseConfig","es","store","createStore","reducers","applyMiddleware","ReduxThunk","BrowserRouter","Route","path","component","Home","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf5593d8.chunk.js","sourcesContent":["import {\r\n    USER_LOGIN_SUCCESS,\r\n    USER_RESET_DEFAULT\r\n} from '../actions/types'\r\n\r\nconst INITIAL_STATE = {\r\n    isSignedIn: false,\r\n    displayName: '',\r\n    email: '',\r\n    phoneNumber: '',\r\n    photoURL: '',\r\n    uid: ''\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_SUCCESS:\r\n            return { ...state, ...action.payload };\r\n        case USER_RESET_DEFAULT:\r\n            return { ...state, ...INITIAL_STATE };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    SET_VIDEO_DEFAULT,\r\n    SET_VIDEO_SEARCHED,\r\n    SET_VIDEO_SELECTED,\r\n    SET_VIDEO_FOR_LATER,\r\n    UNSAVE_VIDEO_FOR_LATER,\r\n    SET_ALL_VIDEOS_FOR_LATER\r\n\r\n} from '../actions/types'\r\n\r\nconst INITIAL_STATE = {\r\n    videos: [],\r\n    videosForLater: [],\r\n    selectedVideo: null\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_VIDEO_DEFAULT: return { ...state, ...action.payload }\r\n        case SET_VIDEO_SEARCHED:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n        case SET_VIDEO_SELECTED:\r\n            return { ...state, ...action.payload };\r\n        case SET_VIDEO_FOR_LATER: {\r\n            return {\r\n                ...state,\r\n                videosForLater: [...state.videosForLater.filter(v => v.id.videoId !== action.video.id.videoId),\r\n                action.video]\r\n            };\r\n        }\r\n        case UNSAVE_VIDEO_FOR_LATER: {\r\n            return {\r\n                ...state,\r\n                videosForLater: state.videosForLater.filter(v => v.id.videoId !== action.video.id.videoId)\r\n            };\r\n        }\r\n        case SET_ALL_VIDEOS_FOR_LATER: {\r\n            return {\r\n                ...state,\r\n                videosForLater: action.videosForLater || []\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { SET_SEARCHBAR_TERM } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n  term: ''\r\n}; \r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch(action.type)\r\n    {\r\n      case SET_SEARCHBAR_TERM:\r\n      {\r\n        return {\r\n          ...state, ...action.payload\r\n        };\r\n      }\r\n      default: \r\n        return state;\r\n      \r\n    }\r\n};","import AuthReducer from './AuthReducer';\r\nimport VideoReducer from './VideoReducer';\r\nimport SearchReducer from './SearchReducer';\r\n\r\nimport { combineReducers } from 'redux';\r\n\r\nexport default combineReducers({\r\n  authUser: AuthReducer,\r\n  videoUser: VideoReducer,\r\n  searchBar: SearchReducer\r\n});","export const USER_RESET_DEFAULT = 'user_reset_default';\r\nexport const USER_LOGIN_SUCCESS = 'user_login_success';\r\nexport const SET_SEARCHBAR_TERM = 'set_searchbar_term';\r\nexport const SET_VIDEO_SEARCHED = 'set_video_search';\r\nexport const SET_VIDEO_SELECTED = 'set_video_selected';\r\nexport const SET_VIDEO_FOR_LATER = 'set_video_for_later';\r\nexport const SET_VIDEO_DEFAULT = 'set_video_default';\r\nexport const SET_ALL_VIDEOS_FOR_LATER = 'set_all_videos_for_later';\r\nexport const UNSAVE_VIDEO_FOR_LATER = 'unsave_video_for_later';\r\n\r\n","import firebase from 'firebase';\r\nimport { setAllSavedVideos } from './VideoActions';\r\n\r\nexport const createUserDb = (user) => {\r\n\r\n    let auth = firebase.auth();\r\n\r\n    const { displayName,\r\n        email,\r\n        phoneNumber,\r\n        photoURL,\r\n        uid } = user;\r\n\r\n    firebase.database().ref(`/users/${auth.currentUser.uid}/user`)\r\n        .set({\r\n            displayName,\r\n            email,\r\n            phoneNumber,\r\n            photoURL,\r\n            uid\r\n        });\r\n};\r\n\r\nexport const getSavedVideosFromDb = (dispatch) => {\r\n    let auth = firebase.auth();\r\n    firebase.database().ref(`/users/${auth.currentUser.uid}/video`)\r\n        .on('value', snapshot => {\r\n            if (snapshot.val())\r\n                dispatch(setAllSavedVideos(snapshot.val().videosForLater));\r\n        });\r\n};\r\n\r\nexport const setSavedVideosDb = (state) => {\r\n    let auth = firebase.auth();\r\n    firebase.database().ref(`/users/${auth.currentUser.uid}/video`)\r\n        .set({\r\n            videosForLater: state.videoUser.videosForLater\r\n        });\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  userOnAuthStateChange } from '../actions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Login extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.userOnAuthStateChange();\r\n    }\r\n\r\n    renderLoginForm() {\r\n\r\n        if (this.props.isSignedIn)\r\n            return (<Redirect to=\"/home\" />)\r\n        else\r\n          return (<Redirect to=\"/auth\" />);\r\n    }\r\n\r\n    render() {\r\n        return this.renderLoginForm();\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return { ...state.authUser };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    userOnAuthStateChange\r\n})(Login);","import {\r\n    USER_LOGIN_SUCCESS,\r\n    USER_RESET_DEFAULT\r\n} from './types';\r\nimport firebase from 'firebase'\r\nimport { createUserDb, getSavedVideosFromDb } from './FirebaseActions';\r\nimport { setVideoDefault } from './VideoActions';\r\n\r\nexport const userLoginSuccess = user => {\r\n    const {\r\n        displayName,\r\n        email,\r\n        phoneNumber,\r\n        photoURL,\r\n        uid\r\n    } = user.providerData[0];\r\n\r\n    return {\r\n        type: USER_LOGIN_SUCCESS,\r\n        payload: {\r\n            displayName,\r\n            email,\r\n            phoneNumber,\r\n            photoURL,\r\n            uid,\r\n            isSignedIn: true\r\n        }\r\n    };\r\n};\r\n\r\nexport const userSetDefault = () => {\r\n    return {\r\n        type: USER_RESET_DEFAULT,\r\n        payload: {\r\n            isSignedIn: false,\r\n            displayName: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            photoURL: '',\r\n            uid: ''\r\n        }\r\n    };\r\n};\r\n\r\nexport const userLogOut = () => dispatch => {\r\n    firebase.auth().signOut().then(() => {\r\n        dispatch(userSetDefault());\r\n        dispatch(setVideoDefault());\r\n    });\r\n};\r\n\r\nexport const userOnAuthStateChange = () => dispatch => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n            dispatch(userLoginSuccess(user));\r\n            createUserDb(user);\r\n            getSavedVideosFromDb(dispatch);\r\n        }\r\n        else\r\n            dispatch(userSetDefault());\r\n    });\r\n};\r\n","import {\r\n    SET_VIDEO_SEARCHED,\r\n    SET_VIDEO_SELECTED,\r\n    SET_VIDEO_FOR_LATER,\r\n    UNSAVE_VIDEO_FOR_LATER,\r\n    SET_ALL_VIDEOS_FOR_LATER,\r\n    SET_VIDEO_DEFAULT\r\n} from './types';\r\n\r\nimport { setSavedVideosDb } from './FirebaseActions';\r\nimport YTSearch from 'youtube-api-search';\r\nimport config from '../config.json';\r\n\r\nexport const setVideoDefault = () => {\r\n    return {\r\n        type: SET_VIDEO_DEFAULT,\r\n        payload: {\r\n            videos: [],\r\n            videosForLater: [],\r\n            selectedVideo: null\r\n        }\r\n    };\r\n};\r\n\r\nconst setVideoSearched = videos => {\r\n    return {\r\n        type: SET_VIDEO_SEARCHED,\r\n        payload: {\r\n            videos,\r\n            selectedVideo: videos[0]\r\n        }\r\n    };\r\n};\r\n\r\nexport const videoSearch = searchTerm => {\r\n    \r\n    const API_KEY = config.googleApiConfig.apiKey;\r\n\r\n    return (dispatch) => {\r\n        YTSearch({ key: API_KEY, term: searchTerm }, (videos) => dispatch(setVideoSearched(videos)));\r\n    };\r\n};\r\n\r\nexport const setVideoSelected = video => {\r\n    return {\r\n        type: SET_VIDEO_SELECTED,\r\n        payload: {\r\n            selectedVideo: video\r\n        }\r\n    };\r\n};\r\n\r\nexport const setVideoForLater = video => (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_VIDEO_FOR_LATER,\r\n            video\r\n        });\r\n\r\n        setSavedVideosDb(getState());\r\n};\r\n\r\nexport const unsaveVideoForLater = video => (dispatch, getState) => {\r\n    dispatch({\r\n        type: UNSAVE_VIDEO_FOR_LATER,\r\n        video\r\n    });\r\n\r\n    setSavedVideosDb(getState());\r\n};\r\n\r\nexport const setAllSavedVideos = videosForLater => {\r\n    return {\r\n        type: SET_ALL_VIDEOS_FOR_LATER,\r\n        videosForLater\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setTerm } from '../actions'\r\n\r\nclass SearchBar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.onInputChange = this.onInputChange.bind(this);\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.props.setTerm(this.refs.pathInput.value);\r\n        this.props.onSearchTermChange(this.refs.pathInput.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <input className=\"form-control\"\r\n                    value={this.props.term}\r\n                    onChange={this.onInputChange}\r\n                    ref=\"pathInput\"\r\n                />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { term } = state.searchBar;\r\n    return { term };\r\n};\r\n\r\nexport default connect(mapStateToProps, { setTerm })(SearchBar);","import { SET_SEARCHBAR_TERM } from './types';\r\n\r\nexport const setTerm = (term) => {\r\n  return {\r\n      type: SET_SEARCHBAR_TERM,\r\n      payload: {\r\n          term\r\n      }\r\n  }\r\n};","import React from 'react';\n\nconst VideoDetail = (props) => {\n    const video = props.video;\n    \n    if(!video){\n        return <div>Search for any video...</div>;\n    }\n    \n    const videoId = video.id.videoId;\n    const url = `https://www.youtube.com/embed/${videoId}`;\n\n    return (\n        <div className=\"video-detail\">\n            <div className=\"embed-responsive embed-responsive-16by9\">\n            <iframe title=\"iframe\" className=\"embed-responsive-item\" src={url} />\n            </div>\n            <div className=\"details\">\n                <div>{video.snippet.title}</div>\n                <div>{video.snippet.description}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default VideoDetail;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setVideoSelected,\n         setVideoForLater,\n         unsaveVideoForLater\n          } from '../actions';\nimport {\n    MDBRow,\n    MDBCol, MDBCard, MDBCardBody\n} from 'mdbreact';\n\nconst VideoListItem = (props) => {\n    const video = props.video;\n    const imageUrl = video.snippet.thumbnails.default.url;\n    \n    const checkIfVideoIsSaved = (video) => {\n        return props.videosForLater.map(v =>  v.id.videoId).indexOf(video.id.videoId) > -1;\n    };\n\n    const renderButton = (video) => {\n       \n        if(props.videosForLater.length === 0 || !checkIfVideoIsSaved(video))\n        {\n           return(<button onClick={() => props.setVideoForLater(video)} className=\"btn btn-primary\">Watch later</button>);\n        }\n        return (<button onClick={() => props.unsaveVideoForLater(video)} className=\"btn btn-success\">Saved for later</button>);\n    }\n\n    return (\n        <MDBRow>\n            <MDBCol md=\"9\">\n                <MDBCard>\n                    <MDBCardBody onClick={() => props.setVideoSelected(video)} className=\"video-list media\">\n                    <div className=\"media-left\"  >\n                            <img alt=\"\" className=\"media-object\" src={imageUrl} />\n                        </div>\n                        <div className=\"media-body\">\n                            <div className=\"media-heading\">{video.snippet.title}</div>\n                        </div>\n                    </MDBCardBody>\n                </MDBCard>\n            </MDBCol>\n            <MDBCol md=\"3\">\n                {renderButton(video)}            \n            </MDBCol>\n        </MDBRow>\n    );\n};\n\n\nconst mapStateToProps = (state, meProps) => {\n    const { video } = meProps;\n    const { videosForLater } = state.videoUser;;\n    \n    return {\n      video,\n      videosForLater\n    };\n };\n \n export default connect(mapStateToProps, {\n    setVideoSelected,\n    setVideoForLater,\n    unsaveVideoForLater\n })(VideoListItem);","import React from 'react';\nimport VideoListItem from './VideoListItem';\nimport {\n   MDBCard\n} from 'mdbreact';\n\nconst VideoList = (props) => {\n    const videoItems = props.videos.map((video) => {\n        return (\n            <VideoListItem      \n                key={video.etag} \n                video={video}/>\n        );\n    });\n\n    return (\n        <MDBCard className=\"col-md-12 list-group\">\n            {videoItems}\n        </MDBCard>\n    );\n};\n\nexport default VideoList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SearchBar from './SearchBar';\r\nimport VideoDetail from './VideoDetail';\r\nimport VideoList from './VideoList';\r\nimport {\r\n    videoSearch,\r\n    userLogOut\r\n} from '../actions';\r\n\r\nimport {\r\n    MDBContainer,\r\n    MDBRow,\r\n    MDBCol, MDBCard\r\n} from 'mdbreact';\r\n\r\nconst Home = (props) => {\r\n    const {\r\n        videoSearch,\r\n        userLogOut,\r\n        selectedVideo,\r\n        videosForLater,\r\n        videos\r\n    } = props;\r\n    \r\n    return (\r\n        <MDBContainer>\r\n            <br />\r\n            <MDBRow>\r\n                <MDBCol md=\"10\">\r\n                    <SearchBar onSearchTermChange={searchTerm => videoSearch(searchTerm)} />\r\n                </MDBCol>\r\n                <MDBCol md=\"2\">\r\n                    <button onClick={() => userLogOut()} className=\"btn btn-danger\">Sign Out!</button>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <MDBRow>\r\n                <MDBCol md=\"6\">\r\n                    <MDBCard>\r\n                        <VideoDetail video={selectedVideo} />\r\n                    </MDBCard>\r\n                    <br />\r\n                    <MDBCard>\r\n                        <MDBCard>\r\n                            <div className=\"details\">\r\n                                <div style={{ alignItems: 'center' }}>Videos to watch later...</div>\r\n                            </div>\r\n                        </MDBCard>\r\n                        <VideoList videos={videosForLater} />\r\n                    </MDBCard>\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                    <VideoList videos={videos} />\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { videos, selectedVideo, videosForLater } = state.videoUser;\r\n    return {\r\n        videos,\r\n        selectedVideo,\r\n        videosForLater\r\n    };\r\n};\r\n\r\nexport default\r\n    connect(mapStateToProps, {\r\n        videoSearch,\r\n        userLogOut\r\n    })(Home);","import \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\n\r\nimport React, { Fragment } from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody } from 'mdbreact';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport firebase from 'firebase';\r\n\r\nconst uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [ firebase.auth.GoogleAuthProvider.PROVIDER_ID],\r\n    callbacks: { signInSuccess: () => false }\r\n}\r\n\r\nconst LoginForm = () => {\r\n    return (\r\n        <Fragment>\r\n        <MDBContainer>\r\n            <MDBRow>\r\n                <MDBCol md=\"3\">\r\n                </MDBCol>\r\n                <MDBCol md=\"6\">\r\n                    <MDBCard>\r\n                        <MDBCardBody className=\"mx-4\">\r\n                            <div className=\"text-center\">\r\n                                <h3 className=\"dark-grey-text mb-5\">\r\n                                    <strong>Sign in</strong>\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"row my-3 d-flex justify-content-center\">\r\n\r\n                                <StyledFirebaseAuth\r\n                                    uiConfig={uiConfig}\r\n                                    firebaseAuth={firebase.auth()} />\r\n                            </div>\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </MDBCol>\r\n            </MDBRow>\r\n        </MDBContainer>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reducers from './reducers';\nimport ReduxThunk from 'redux-thunk';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport LoginForm from './components/LoginForm';\nimport firebase from 'firebase';\nimport config from './config.json';\nimport { Route, BrowserRouter as Router } from 'react-router-dom'\n\nclass App extends Component {\n  componentWillMount() {\n   firebase.initializeApp(config.firebaseConfig);\n\n}\n  render() {\n    return (\n      <Provider store={createStore(reducers, {}, applyMiddleware(ReduxThunk))}>\n         <Router>\n            <div>\n                <Route path=\"/\" component={Login} />\n                <Route path=\"/auth\" component={LoginForm} />\n                <Route path=\"/home\" component={Home} />\n            </div>\n        </Router>\n      </Provider>\n    );  \n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}